import matplotlib.pyplot as plt

# 原始结果数据
results = {
    "CV-QKD_True_ThorlabsPDB": {
        20000: 78.28560606060606, 5000: 78.28560606060606, 40000: 78.28560606060606,
        35000: 78.28560606060606, 30000: 78.28560606060606, 45000: 78.28560606060606,
        15000: 78.28560606060606, 10000: 78.28560606060606, 50000: 78.28560606060606,
        25000: 78.28560606060606, 75000: 78.28560606060606, 55000: 78.28560606060606,
        85000: 78.28560606060606, 60000: 78.28560606060606, 70000: 78.28560606060606,
        95000: 78.28560606060606, 65000: 78.28560606060606, 80000: 78.28560606060606,
        100000: 78.28560606060606, 90000: 78.28560606060606
    },
    "CV-QKD_False_ThorlabsPDB": {
        20000: 78.28560606060606, 45000: 78.28560606060606, 40000: 78.28560606060606,
        5000: 78.28560606060606, 35000: 78.28560606060606, 10000: 78.28560606060606,
        15000: 78.28560606060606, 25000: 78.28560606060606, 30000: 78.28560606060606,
        50000: 78.28560606060606, 80000: 78.28560606060606, 70000: 78.28560606060606,
        75000: 78.28560606060606, 65000: 78.28560606060606, 95000: 78.28560606060606,
        60000: 78.28560606060606, 85000: 78.28560606060606, 55000: 78.28560606060606,
        90000: 78.28560606060606, 100000: 78.28560606060606
    },
    "BB84_True_APD": {
        15000: 307.27, 35000: 307.27, 45000: 330.91, 50000: 330.91,
        25000: 307.27, 10000: 307.27, 5000: 307.27, 40000: 307.27,
        20000: 307.27, 30000: 307.27, 60000: 330.91, 70000: 330.91,
        55000: 330.91, 75000: 354.55, 95000: 449.09, 65000: 330.91,
        85000: 425.45, 90000: 472.73, 100000: 520.00, 80000: 401.82
    },
    "BB84_False_APD": {
        35000: 307.27, 50000: 330.91, 15000: 307.27, 30000: 307.27,
        5000: 307.27, 45000: 330.91, 25000: 307.27, 40000: 307.27,
        20000: 307.27, 10000: 307.27, 65000: 330.91, 55000: 330.91,
        60000: 330.91, 70000: 354.55, 75000: 401.82, 90000: 449.09,
        80000: 425.45, 95000: 496.36, 85000: 401.82, 100000: 543.64
    },
    "BB84_True_SNSPD": {
        15000: 998.606, 20000: 998.606, 5000: 998.606, 40000: 998.606,
        50000: 998.606, 45000: 998.606, 25000: 998.606, 35000: 998.606,
        30000: 998.606, 10000: 998.606, 55000: 998.606, 60000: 998.606,
        75000: 998.606, 65000: 998.606, 70000: 998.606, 90000: 998.606,
        95000: 998.606, 85000: 998.606, 80000: 998.606, 100000: 998.606
    },
    "BB84_False_SNSPD": {
        10000: 879.939, 40000: 879.939, 20000: 879.939, 50000: 879.939,
        35000: 879.939, 45000: 879.939, 5000: 879.939, 25000: 879.939,
        30000: 879.939, 15000: 879.939, 60000: 879.939, 75000: 879.939,
        80000: 879.939, 90000: 879.939, 70000: 879.939, 55000: 879.939,
        85000: 879.939, 65000: 879.939, 95000: 879.939, 100000: 879.939
    },
    "E91_True_APD": {
        15000: 756.21, 20000: 1026.29, 10000: 756.21, 50000: 1998.56,
        5000: 702.20, 30000: 1458.41, 45000: 1944.55, 35000: 1620.45,
        40000: 1674.47, 25000: 1404.39, 60000: 2160.61, 75000: 2916.82,
        55000: 2214.62, 80000: 2862.80, 70000: 2754.77, 90000: 3186.89,
        85000: 3024.85, 95000: 3294.92, 100000: 3402.95, 65000: 2484.70
    },
    "E91_False_APD": {
        30000: 1458.41, 15000: 756.21, 45000: 1944.55, 20000: 1026.29,
        50000: 2160.61, 25000: 1458.41, 40000: 1944.55, 5000: 702.20,
        35000: 1728.48, 10000: 756.21, 65000: 2754.77, 70000: 2970.83,
        80000: 3348.94, 75000: 3078.86, 90000: 3673.03, 95000: 3835.08,
        55000: 2322.65, 60000: 2592.73, 85000: 3348.94, 100000: 3889.09
    },
    "E91_True_SNSPD": {
        35000: 1857.59, 5000: 1857.59, 10000: 1857.59, 45000: 1857.59,
        20000: 1857.59, 25000: 1857.59, 40000: 1857.59, 15000: 1857.59,
        30000: 1857.59, 50000: 1857.59, 65000: 1857.59, 55000: 1857.59,
        80000: 1857.59, 75000: 1857.59, 60000: 1857.59, 70000: 1857.59,
        90000: 1857.59, 95000: 1857.59, 85000: 1857.59, 100000: 1857.59
    }
}

# 过滤掉所有值都相同的数据
filtered_results = {}
for label, data in results.items():
    if len(set(data.values())) > 1:
        filtered_results[label] = data

plt.figure(figsize=(10, 6))

# 绘制非常数的数据线
for label, data in filtered_results.items():
    traffic_sorted = sorted(data.keys())
    power = [data[t] for t in traffic_sorted]
    plt.plot(traffic_sorted, power, marker='o', label=label)

plt.xlabel("Traffic")
plt.ylabel("Power")
plt.title("Non-constant Results (Traffic vs. Power)")
plt.legend()
plt.grid(True)
plt.show()